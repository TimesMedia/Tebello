<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Subs.Presentation"
        xmlns:Data="clr-namespace:Subs.Data;assembly=Subs.Data" xmlns:local1="clr-namespace:Tebello.Presentation" x:Class="Subs.Presentation.DebitOrderBankStatement"
        mc:Ignorable="d"
        Title="DebitOrder processing" Height="890.265" Width="1427.794" Loaded="Window_Loaded">

    <Window.Resources>
        <local1:DateConverter x:Key="lDateConverter"/>
        <local1:IntegerConverter x:Key="lIntegerConverter"/>
        <local1:RandConverter x:Key="lRandConverter"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Aquamarine"/>
        </Style>
        <Style x:Key="AlignRight" TargetType="FrameworkElement">
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        </Style>
        <Data:PaymentDoc x:Key="paymentDoc"/>
        <CollectionViewSource x:Key="DebitOrderBankStatementViewSource" Source="{Binding DebitOrderBankStatement, Source={StaticResource paymentDoc}}"/>
        <Data:SBDebitOrderDoc x:Key="sBDebitOrderDoc"/>
        <CollectionViewSource x:Key="sBDebitOrderViewSource" Source="{Binding SBDebitOrder, Source={StaticResource sBDebitOrderDoc}}"/>
    </Window.Resources>
    <TabControl Margin="0,0,0,0">
        <TabItem Header="Manage debitorder users" >
            <Grid DataContext="{StaticResource sBDebitOrderViewSource}" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="54*"/>
                    <ColumnDefinition Width="127*"/>
                    <ColumnDefinition Width="186*"/>
                    <ColumnDefinition Width="1055*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <DataGrid AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" RowDetailsVisibilityMode="VisibleWhenSelected" Height="554" CanUserAddRows="False" Grid.ColumnSpan="4">
                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="customerIdColumn1" Binding="{Binding CustomerId}" Header="Customer Id" Width="Auto" IsReadOnly="True"/>
                        <DataGridCheckBoxColumn x:Name="suspendedColumn" Binding="{Binding Suspended}" Header="Suspended" Width="Auto"/>
                        <DataGridTextColumn x:Name="accountHolderColumn" Binding="{Binding AccountHolder}" Header="Account Holder" Width="Auto"/>
                        <DataGridTextColumn x:Name="bankColumn" Binding="{Binding Bank}" Header="Bank" Width="Auto"/>
                        <DataGridTextColumn x:Name="bankCodeColumn" Binding="{Binding BankCode}" Header="Bank Code" Width="Auto"/>
                        <DataGridTextColumn x:Name="accountNoColumn" Binding="{Binding AccountNo}" Header="Account No" Width="Auto"/>
                        <DataGridTextColumn x:Name="commentColumn" Binding="{Binding Comment}" Header="Comment" Width="Auto"/>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel Grid.Row="1" Orientation="Horizontal" Grid.ColumnSpan="4">
                    <Button Width="100" Click="buttonLoadSpecificDOUser" Margin="10">Load specific user</Button>
                    <Button Width="100" Click="buttonLoadDOUsers" Margin="10">Load all</Button>
                    <Button Width="100" Click="buttonAddDOUser" Margin="10">Add</Button>
                    <Button Width="100" Click="buttonSaveDOUser" Margin="10">Save</Button>
                    <Button Width="100" Click="buttonExitDOUser" Margin="10">Cancel</Button>
                </StackPanel>
            </Grid>
        </TabItem>

        <TabItem Header="Propose debitors">
            <Canvas Margin="0,0,0,0">
                <DatePicker x:Name="calenderDeliver" Canvas.Left="22" Canvas.Top="41" SelectedDateFormat="Long" Width="191"/>
                <Label Content="Select the planned delivery month" Canvas.Left="22" Canvas.Top="10"/>

                <DataGrid x:Name="ProposalDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" Height="551" Width="1076" 
                      Canvas.Left="22" RowDetailsVisibilityMode="VisibleWhenSelected" Canvas.Top="110" RowHeight="30" CanUserAddRows="False" CanUserDeleteRows="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding CustomerId}" Header="Customer Id" Width="Auto"/>
                        <DataGridTextColumn x:Name="productNameColumn" Binding="{Binding ProductName}" Header="Product Name" Width="Auto"/>
                        <DataGridTextColumn x:Name="subscriptionIdColumn" Binding="{Binding SubscriptionId}" Header="Subscription Id" Width="Auto"/>
                        <DataGridTextColumn x:Name="issueIdColumn" Binding="{Binding IssueId}" Header="Issue Id" Width="Auto"/>
                        <DataGridTextColumn x:Name="issueDescriptionColumn" Binding="{Binding IssueDescription}" Header="Issue Description" Width="Auto"/>
                        <DataGridTextColumn x:Name="classificationColumn" Binding="{Binding Classification}" Header="Classification" Width="Auto"/>
                        <DataGridTextColumn x:Name="subtractColumn" Binding="{Binding Subtract,Converter={StaticResource lRandConverter}}" 
                                         CellStyle="{StaticResource AlignRight}" Header="Subtract" Width="Auto"/>
                    </DataGrid.Columns>
                    <DataGrid.RowHeaderStyle>
                        <Style TargetType="{x:Type DataGridRowHeader}">
                            <Setter Property="Background"  Value="Yellow"/>
                            <Setter Property="Width"  Value="30"/>
                            <Setter Property="BorderBrush" Value="Red" />
                            <Setter Property="BorderThickness"  Value="3" />
                        </Style>
                    </DataGrid.RowHeaderStyle>
                </DataGrid>
                <Button x:Name="buttonProposeDebitOrder" Content="Propose debit order values" Canvas.Left="423" Canvas.Top="14" Width="167"
			    Click="buttonProposeDebitOrder_Click"/>
                <Button Content="Write to XML" Canvas.Left="688" Canvas.Top="16" Width="167"
			    Click="buttonWriteToXML_Click"/>

                <Button Content="Write to CSV" Canvas.Left="688" Canvas.Top="60" Width="167"
			    Click="buttonWriteToCSV_Click"/>
            </Canvas>

        </TabItem>
        <TabItem Header="Bank statement">
            <Canvas Margin="0,0,0,0" DataContext="{StaticResource DebitOrderBankStatementViewSource}">
                <Button x:Name="buttonLoad" Content="Load a new bank statement from a file" Canvas.Left="10" Canvas.Top="10" Width="270" Click="buttonLoad_Click"/>

                <DatePicker x:Name ="pickerMonth" Margin="0,0,0,0" Canvas.Left="178" Canvas.Top="91"/>
                <Button x:Name="buttonSelectRange" Canvas.Left="523" Canvas.Top="75" Click="buttonSelectRange_Click" Content="Load the month" Width="270"/>
                <Button x:Name="buttonNotPosted" Canvas.Left="523" Canvas.Top="111" Click="buttonNotPosted_Click" Content="Load the month - not posted yet" Width="270"/>

                <Button x:Name="buttonValidate" Canvas.Left="10" Canvas.Top="766" Click="buttonValidate_Click" Content="Validate the payments"/>
                <Button x:Name="buttonPost" Canvas.Left="264" Canvas.Top="766" Click="buttonPost_Click" Content="Post the validated entries" IsEnabled="False"/>

                <Label Canvas.Left="820" Canvas.Top="75">Balance over period</Label>

                <TextBox x:Name="textBalanceOverPeriod" Canvas.Left="960" Canvas.Top="75" Width="132" Height="26" TextAlignment="Right"></TextBox>
                <Label Content="}" Height="122" Canvas.Left="427" Canvas.Top="36" Width="46" FontSize="80"/>

                <Label Content="Select the month" Canvas.Left="10" Canvas.Top="91"/>

                <DataGrid x:Name="SBBankStatementDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" Height="554" ItemsSource="{Binding}" Canvas.Left="10" SelectionUnit="CellOrRowHeader" 
                  Canvas.Top="187" Width="1371" RowHeight="30" IsSynchronizedWithCurrentItem="True" MouseRightButtonUp="DebitOrderBankStatementDataGrid_MouseRightButtonUp" CanUserAddRows="False" 
                          IsReadOnly="true" CanUserDeleteRows="False">

                    <DataGrid.RowHeaderStyle>
                        <Style TargetType="{x:Type DataGridRowHeader}">
                            <Setter Property="Background"  Value="Yellow"/>
                            <Setter Property="Width"  Value="30"/>
                            <Setter Property="BorderBrush" Value="Red" />
                            <Setter Property="BorderThickness"  Value="3" />
                        </Style>
                    </DataGrid.RowHeaderStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="transactionDateColumn" CellStyle="{StaticResource AlignRight}" Header="Payment date"  Binding="{Binding TransactionDate, Converter={StaticResource lDateConverter}}"/>
                        <DataGridTextColumn x:Name="allocationNoColumn" Binding="{Binding AllocationNo}" Header="Allocation No" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="amountColumn" Binding="{Binding Amount, Converter={StaticResource lRandConverter}}" Header="Amount" Width="SizeToHeader" CellStyle="{StaticResource AlignRight}" />
                        <DataGridTextColumn x:Name="referenceColumn" Binding="{Binding Reference}" Header="Reference" Width="200"/>
                        <DataGridTextColumn x:Name="bankPaymentMethodColumn" Binding="{Binding BankPaymentMethod}" Header="Bank Payment Method" Width="SizeToHeader"/>
                        <DataGridTextColumn x:Name="customerIdColumn" Binding="{Binding CustomerId, Mode=TwoWay, Converter={StaticResource lIntegerConverter}, UpdateSourceTrigger=LostFocus}" Header="Customer Id" Width="SizeToHeader"
                                    CellStyle="{StaticResource AlignRight}"/>
                        <DataGridTextColumn x:Name="errorMessageColumn" Binding="{Binding ErrorMessage}" Header="Message" Width="auto"/>
                        <DataGridCheckBoxColumn Binding="{Binding Posted}" Header="Posted" Width="SizeToHeader"/>
                        <DataGridTextColumn Binding="{Binding PaymentTransactionId}" Header="Payment Transaction Id" Width="SizeToHeader"
                                    CellStyle="{StaticResource AlignRight}"/>

                    </DataGrid.Columns>

                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Find Customer" Click="FindCustomer_Click" />
                            <MenuItem Header="GoTo Customer" Click="GoToCustomer_Click" />
                            <MenuItem Header="Accept the payment" Click="AcceptPayment_Click" />
                            <MenuItem Header="Mark as incorrectly deposited" Click="MarkAsIncorrectlyDeposited_Click" />
                            <MenuItem Header="Mark as internal transfer" Click="MarkAsInternalTransfer_Click"/>







                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </Canvas>
        </TabItem>
    </TabControl>


</Window>
